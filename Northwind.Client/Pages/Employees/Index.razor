@using Northwind.Shared.Employees
@using static Northwind.Shared.Constants.Routes.Api
@attribute [Route(Routes.Pages.Employees.Index)]

<PageTitle>Employees</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Employees</MudText>
<MudText Typo="Typo.body1" Class="mb-8">This component demonstrates fetching data from the server.</MudText>

@if (_employees == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="@_employees" Hover="true" SortLabel="Sort By" Elevation="0" AllowUnsorted="false">
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel InitialDirection="SortDirection.Ascending"
                    SortBy="new Func<EmployeesDto, object>(x => x.EmployeeId)">Employees Id</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<EmployeesDto, object>(x => x.FirstName ?? string.Empty)">First Name
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<EmployeesDto, object>(x => x.LastName ?? string.Empty)">Last Name
                </MudTableSortLabel>
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Employees Id">@context.EmployeeId</MudTd>
            <MudTd DataLabel="First Name">@context.FirstName</MudTd>
            <MudTd DataLabel="Last Name">@context.LastName</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 50, 100 }" />
        </PagerContent>
    </MudTable>
}

@code {


    private List<EmployeesDto>? _employees;

    [Inject]
    public HttpClient httpClient { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        if (_employees == null)
        {
            _employees = await httpClient.GetFromJsonAsync<List<EmployeesDto>>(Routes.Api.Employees.GetAll);
        }
    }

}